package nlpart;

import java.io.InputStreamReader;	
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.*;
public class Util {
	
	private static Logger logger = Logger.getLogger("myLog");
	
	public static void writeToLog(Level level, String s){
		logger.log(level,s);
		
	}
	
	public List<String> getQuestionType(String question){
		List<String> questionAndType = new ArrayList<String>();
		// We open and read the file QuestionTpe.txt
		String inputLine;   //string holds the lines read from the file

        List<String> questionTypeList = new ArrayList<String>();  //List to hold the contents of the question type file

        questionAndType.add(question);  //add the original question to return it if no modifications happen
        questionAndType.add("normal");    //add question type equals 0 (normal) as default

        Boolean cleanQuestion = false;

        using (InputStreamReader questionTypeFile = new InputStreamReader("QuestionTypes.txt"))   //read question types file into memory
        {
            inputLine = questionTypeFile.ReadLine();

            while ((inputLine != null))
            {
                /*
                 * this will force a file format where:
                 * 1)regex of question start with '^' which is a regex reserved character means "the beginning of a string"
                 * 2)line starts with small english letters [a-z] only and this represent the type of the question
                 * It will allow comment lines (not blocks) in the file that will start with any character except '^' or [a-z]
                 * Better to write "//" as the comment line sign as its the common adopted style for writting comments
                 * */

                while (!(Regex.IsMatch(inputLine,@"^(\^|[a-z])")))
                    inputLine = questionTypeFile.ReadLine();

                questionTypeList.Add(inputLine);

                inputLine = questionTypeFile.ReadLine();
            }
        }

        while (!cleanQuestion)
        {
            cleanQuestion = true;   //flag to tell if all the questions kewords are consumed

            for (int i = 0; i < questionTypeList.Count; i++)
            {
                if (Regex.IsMatch(question, questionTypeList[i]))
                {
                    question = Regex.Replace(question, questionTypeList[i], "");

                    question = question.Trim();

                    questionAndType[0] = question;

                    questionAndType[1] = questionTypeList[++i];

                    cleanQuestion = false;

                    break;
                }
                else
                    i++;
            }

        }
		return questionAndType;
	}
}
